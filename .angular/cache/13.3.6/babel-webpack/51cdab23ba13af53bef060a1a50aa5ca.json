{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"../cake/cake.component\";\n\nfunction CakelistComponent_app_cake_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-cake\", 2);\n  }\n\n  if (rf & 2) {\n    const eachcake_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"data1\", eachcake_r1);\n  }\n}\n\nexport let CakelistComponent = /*#__PURE__*/(() => {\n  class CakelistComponent {\n    constructor() {\n      this.data = [];\n    }\n\n    ngOnInit() {}\n\n  }\n\n  CakelistComponent.ɵfac = function CakelistComponent_Factory(t) {\n    return new (t || CakelistComponent)();\n  };\n\n  CakelistComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CakelistComponent,\n    selectors: [[\"app-cakelist\"]],\n    inputs: {\n      data: \"data\"\n    },\n    decls: 2,\n    vars: 1,\n    consts: [[1, \"row\"], [\"class\", \"col\", 3, \"data1\", 4, \"ngFor\", \"ngForOf\"], [1, \"col\", 3, \"data1\"]],\n    template: function CakelistComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtemplate(1, CakelistComponent_app_cake_1_Template, 1, 1, \"app-cake\", 1);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.data);\n      }\n    },\n    directives: [i1.NgForOf, i2.CakeComponent],\n    styles: [\"\"]\n  });\n  return CakelistComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}